{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coren\\\\Desktop\\\\tp_individuel_microservice\\\\frontend\\\\src\\\\pages\\\\PublicationsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchPublications, createPublication, deletePublication, updatePublication } from '../services/api';\nimport { toast } from 'react-toastify'; // Import react-toastify\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PublicationsPage() {\n  _s();\n  const [publications, setPublications] = useState([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [editingId, setEditingId] = useState(null); // ID de la publication en cours de modification\n  const isAuthenticated = !!localStorage.getItem('token'); // Vérifie si l'utilisateur est connecté\n\n  useEffect(() => {\n    const loadPublications = async () => {\n      try {\n        const response = await fetchPublications();\n        // Trier les publications par date décroissante\n        const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n        setPublications(sortedPublications);\n      } catch (error) {\n        toast.error('Erreur lors du chargement des publications');\n      }\n    };\n    loadPublications();\n  }, []);\n  const handleAddPublication = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      toast.error('Vous devez être connecté pour ajouter une publication.');\n      return;\n    }\n    try {\n      const newPublication = {\n        title,\n        content\n      };\n      await createPublication(newPublication, token);\n      toast.success('Publication ajoutée avec succès');\n      setTitle('');\n      setContent('');\n      const response = await fetchPublications();\n      // Trier les publications après ajout\n      const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n      setPublications(sortedPublications);\n    } catch (error) {\n      toast.error('Erreur lors de l\\'ajout de la publication');\n    }\n  };\n  const handleDeletePublication = async id => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      toast.error('Vous devez être connecté pour supprimer une publication.');\n      return;\n    }\n    try {\n      await deletePublication(id, token);\n      toast.success('Publication supprimée avec succès');\n      const response = await fetchPublications();\n      // Trier les publications après suppression\n      const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n      setPublications(sortedPublications);\n    } catch (error) {\n      toast.error('Erreur lors de la suppression de la publication');\n    }\n  };\n  const handleEditPublication = pub => {\n    setEditingId(pub._id);\n    setTitle(pub.title);\n    setContent(pub.content);\n  };\n  const handleUpdatePublication = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      toast.error('Vous devez être connecté pour modifier une publication.');\n      return;\n    }\n    try {\n      const updatedPublication = {\n        title,\n        content\n      };\n      await updatePublication(editingId, updatedPublication, token);\n      toast.success('Publication modifiée avec succès');\n      setEditingId(null);\n      setTitle('');\n      setContent('');\n      const response = await fetchPublications();\n      // Trier les publications après modification\n      const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n      setPublications(sortedPublications);\n    } catch (error) {\n      toast.error('Erreur lors de la modification de la publication');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Publications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editingId ? handleUpdatePublication : handleAddPublication,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Titre\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Contenu\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [editingId ? 'Modifier' : 'Ajouter', \" une publication\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), publications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-publications-message\",\n      children: \"Aucune publication disponible pour le moment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: publications.map(pub => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: pub.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pub.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditPublication(pub),\n            children: \"Modifier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeletePublication(pub._id),\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true)]\n      }, pub._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(PublicationsPage, \"By/0MWRqcne75Tp0T1m2KHkFa1E=\");\n_c = PublicationsPage;\nexport default PublicationsPage;\nvar _c;\n$RefreshReg$(_c, \"PublicationsPage\");","map":{"version":3,"names":["React","useEffect","useState","fetchPublications","createPublication","deletePublication","updatePublication","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","PublicationsPage","_s","publications","setPublications","title","setTitle","content","setContent","editingId","setEditingId","isAuthenticated","localStorage","getItem","loadPublications","response","sortedPublications","data","sort","a","b","Date","createdAt","error","handleAddPublication","e","preventDefault","token","newPublication","success","handleDeletePublication","id","handleEditPublication","pub","_id","handleUpdatePublication","updatedPublication","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","length","className","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/coren/Desktop/tp_individuel_microservice/frontend/src/pages/PublicationsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchPublications, createPublication, deletePublication, updatePublication } from '../services/api';\r\nimport { toast } from 'react-toastify'; // Import react-toastify\r\n\r\nfunction PublicationsPage() {\r\n    const [publications, setPublications] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [editingId, setEditingId] = useState(null); // ID de la publication en cours de modification\r\n    const isAuthenticated = !!localStorage.getItem('token'); // Vérifie si l'utilisateur est connecté\r\n\r\n    useEffect(() => {\r\n        const loadPublications = async () => {\r\n            try {\r\n                const response = await fetchPublications();\r\n                // Trier les publications par date décroissante\r\n                const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n                setPublications(sortedPublications);\r\n            } catch (error) {\r\n                toast.error('Erreur lors du chargement des publications');\r\n            }\r\n        };\r\n        loadPublications();\r\n    }, []);\r\n\r\n    const handleAddPublication = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            toast.error('Vous devez être connecté pour ajouter une publication.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const newPublication = { title, content };\r\n            await createPublication(newPublication, token);\r\n            toast.success('Publication ajoutée avec succès');\r\n            setTitle('');\r\n            setContent('');\r\n            const response = await fetchPublications();\r\n            // Trier les publications après ajout\r\n            const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n            setPublications(sortedPublications);\r\n        } catch (error) {\r\n            toast.error('Erreur lors de l\\'ajout de la publication');\r\n        }\r\n    };\r\n\r\n    const handleDeletePublication = async (id) => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            toast.error('Vous devez être connecté pour supprimer une publication.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await deletePublication(id, token);\r\n            toast.success('Publication supprimée avec succès');\r\n            const response = await fetchPublications();\r\n            // Trier les publications après suppression\r\n            const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n            setPublications(sortedPublications);\r\n        } catch (error) {\r\n            toast.error('Erreur lors de la suppression de la publication');\r\n        }\r\n    };\r\n\r\n    const handleEditPublication = (pub) => {\r\n        setEditingId(pub._id);\r\n        setTitle(pub.title);\r\n        setContent(pub.content);\r\n    };\r\n\r\n    const handleUpdatePublication = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            toast.error('Vous devez être connecté pour modifier une publication.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const updatedPublication = { title, content };\r\n            await updatePublication(editingId, updatedPublication, token);\r\n            toast.success('Publication modifiée avec succès');\r\n            setEditingId(null);\r\n            setTitle('');\r\n            setContent('');\r\n            const response = await fetchPublications();\r\n            // Trier les publications après modification\r\n            const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n            setPublications(sortedPublications);\r\n        } catch (error) {\r\n            toast.error('Erreur lors de la modification de la publication');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Publications</h1>\r\n            {isAuthenticated && (\r\n                <form onSubmit={editingId ? handleUpdatePublication : handleAddPublication}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Titre\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                    <textarea\r\n                        placeholder=\"Contenu\"\r\n                        value={content}\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                    />\r\n                    <button type=\"submit\">{editingId ? 'Modifier' : 'Ajouter'} une publication</button>\r\n                </form>\r\n            )}\r\n            {publications.length === 0 ? (\r\n                <p className=\"no-publications-message\">Aucune publication disponible pour le moment.</p>\r\n            ) : (\r\n                <ul>\r\n                    {publications.map((pub) => (\r\n                        <li key={pub._id}>\r\n                            <h2>{pub.title}</h2>\r\n                            <p>{pub.content}</p>\r\n                            {isAuthenticated && (\r\n                                <>\r\n                                    <button onClick={() => handleEditPublication(pub)}>Modifier</button>\r\n                                    <button onClick={() => handleDeletePublication(pub._id)}>Supprimer</button>\r\n                                </>\r\n                            )}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PublicationsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}