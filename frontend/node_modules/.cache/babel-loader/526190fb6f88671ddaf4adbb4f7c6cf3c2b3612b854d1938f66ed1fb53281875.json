{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coren\\\\Desktop\\\\tp_individuel_microservice\\\\frontend\\\\src\\\\pages\\\\PublicationsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchPublications, createPublication, deletePublication, updatePublication } from '../services/api';\nimport { fetchUserById } from '../services/userService'; // Nouvelle fonction pour récupérer les utilisateurs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PublicationsPage() {\n  _s();\n  const [publications, setPublications] = useState([]);\n  const [users, setUsers] = useState({}); // Stocke les noms des utilisateurs par ID\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [editingId, setEditingId] = useState(null); // ID de la publication en cours de modification\n\n  useEffect(() => {\n    const loadPublications = async () => {\n      try {\n        const response = await fetchPublications();\n        setPublications(response.data);\n\n        // Récupérer les noms des utilisateurs\n        const userIds = [...new Set(response.data.map(pub => pub.author))]; // IDs uniques\n        const userPromises = userIds.map(id => fetchUserById(id));\n        const userResponses = await Promise.all(userPromises);\n        const userMap = userResponses.reduce((acc, user) => {\n          acc[user._id] = user.name;\n          return acc;\n        }, {});\n        setUsers(userMap);\n      } catch (error) {\n        alert('Erreur lors du chargement des publications ou des utilisateurs');\n      }\n    };\n    loadPublications();\n  }, []);\n  const handleAddPublication = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('Vous devez être connecté pour ajouter une publication.');\n      return;\n    }\n    try {\n      const newPublication = {\n        title,\n        content\n      };\n      await createPublication(newPublication, token);\n      alert('Publication ajoutée avec succès');\n      setTitle('');\n      setContent('');\n      const response = await fetchPublications();\n      setPublications(response.data);\n    } catch (error) {\n      alert('Erreur lors de l\\'ajout de la publication');\n    }\n  };\n  const handleDeletePublication = async id => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('Vous devez être connecté pour supprimer une publication.');\n      return;\n    }\n    try {\n      await deletePublication(id, token);\n      alert('Publication supprimée avec succès');\n      const response = await fetchPublications();\n      setPublications(response.data);\n    } catch (error) {\n      alert('Erreur lors de la suppression de la publication');\n    }\n  };\n  const handleEditPublication = pub => {\n    setEditingId(pub._id);\n    setTitle(pub.title);\n    setContent(pub.content);\n  };\n  const handleUpdatePublication = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('Vous devez être connecté pour modifier une publication.');\n      return;\n    }\n    try {\n      const updatedPublication = {\n        title,\n        content\n      };\n      await updatePublication(editingId, updatedPublication, token);\n      alert('Publication modifiée avec succès');\n      setEditingId(null);\n      setTitle('');\n      setContent('');\n      const response = await fetchPublications();\n      setPublications(response.data);\n    } catch (error) {\n      alert('Erreur lors de la modification de la publication');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Publications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editingId ? handleUpdatePublication : handleAddPublication,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Titre\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Contenu\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [editingId ? 'Modifier' : 'Ajouter', \" une publication\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: publications.map(pub => {\n        var _users$pub$author;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"publication-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-sphere\",\n              children: ((_users$pub$author = users[pub.author]) === null || _users$pub$author === void 0 ? void 0 : _users$pub$author.charAt(0).toUpperCase()) || '?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: pub.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: pub.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditPublication(pub),\n            children: \"Modifier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeletePublication(pub._id),\n            children: \"Supprimer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, pub._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_s(PublicationsPage, \"dr6YXJ1CqXfO0QCvrcFZEUyrDrU=\");\n_c = PublicationsPage;\nexport default PublicationsPage;\nvar _c;\n$RefreshReg$(_c, \"PublicationsPage\");","map":{"version":3,"names":["React","useEffect","useState","fetchPublications","createPublication","deletePublication","updatePublication","fetchUserById","jsxDEV","_jsxDEV","PublicationsPage","_s","publications","setPublications","users","setUsers","title","setTitle","content","setContent","editingId","setEditingId","loadPublications","response","data","userIds","Set","map","pub","author","userPromises","id","userResponses","Promise","all","userMap","reduce","acc","user","_id","name","error","alert","handleAddPublication","e","preventDefault","token","localStorage","getItem","newPublication","handleDeletePublication","handleEditPublication","handleUpdatePublication","updatedPublication","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_users$pub$author","className","charAt","toUpperCase","onClick","_c","$RefreshReg$"],"sources":["C:/Users/coren/Desktop/tp_individuel_microservice/frontend/src/pages/PublicationsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchPublications, createPublication, deletePublication, updatePublication } from '../services/api';\r\nimport { fetchUserById } from '../services/userService'; // Nouvelle fonction pour récupérer les utilisateurs\r\n\r\nfunction PublicationsPage() {\r\n    const [publications, setPublications] = useState([]);\r\n    const [users, setUsers] = useState({}); // Stocke les noms des utilisateurs par ID\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [editingId, setEditingId] = useState(null); // ID de la publication en cours de modification\r\n\r\n    useEffect(() => {\r\n        const loadPublications = async () => {\r\n            try {\r\n                const response = await fetchPublications();\r\n                setPublications(response.data);\r\n\r\n                // Récupérer les noms des utilisateurs\r\n                const userIds = [...new Set(response.data.map((pub) => pub.author))]; // IDs uniques\r\n                const userPromises = userIds.map((id) => fetchUserById(id));\r\n                const userResponses = await Promise.all(userPromises);\r\n                const userMap = userResponses.reduce((acc, user) => {\r\n                    acc[user._id] = user.name;\r\n                    return acc;\r\n                }, {});\r\n                setUsers(userMap);\r\n            } catch (error) {\r\n                alert('Erreur lors du chargement des publications ou des utilisateurs');\r\n            }\r\n        };\r\n        loadPublications();\r\n    }, []);\r\n\r\n    const handleAddPublication = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            alert('Vous devez être connecté pour ajouter une publication.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const newPublication = { title, content };\r\n            await createPublication(newPublication, token);\r\n            alert('Publication ajoutée avec succès');\r\n            setTitle('');\r\n            setContent('');\r\n            const response = await fetchPublications();\r\n            setPublications(response.data);\r\n        } catch (error) {\r\n            alert('Erreur lors de l\\'ajout de la publication');\r\n        }\r\n    };\r\n\r\n    const handleDeletePublication = async (id) => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            alert('Vous devez être connecté pour supprimer une publication.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await deletePublication(id, token);\r\n            alert('Publication supprimée avec succès');\r\n            const response = await fetchPublications();\r\n            setPublications(response.data);\r\n        } catch (error) {\r\n            alert('Erreur lors de la suppression de la publication');\r\n        }\r\n    };\r\n\r\n    const handleEditPublication = (pub) => {\r\n        setEditingId(pub._id);\r\n        setTitle(pub.title);\r\n        setContent(pub.content);\r\n    };\r\n\r\n    const handleUpdatePublication = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            alert('Vous devez être connecté pour modifier une publication.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const updatedPublication = { title, content };\r\n            await updatePublication(editingId, updatedPublication, token);\r\n            alert('Publication modifiée avec succès');\r\n            setEditingId(null);\r\n            setTitle('');\r\n            setContent('');\r\n            const response = await fetchPublications();\r\n            setPublications(response.data);\r\n        } catch (error) {\r\n            alert('Erreur lors de la modification de la publication');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Publications</h1>\r\n            <form onSubmit={editingId ? handleUpdatePublication : handleAddPublication}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Titre\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                <textarea\r\n                    placeholder=\"Contenu\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                />\r\n                <button type=\"submit\">{editingId ? 'Modifier' : 'Ajouter'} une publication</button>\r\n            </form>\r\n            <ul>\r\n                {publications.map((pub) => (\r\n                    <li key={pub._id}>\r\n                        <div className=\"publication-header\">\r\n                            <div className=\"user-sphere\">\r\n                                {users[pub.author]?.charAt(0).toUpperCase() || '?'}\r\n                            </div>\r\n                            <h2>{pub.title}</h2>\r\n                        </div>\r\n                        <p>{pub.content}</p>\r\n                        <button onClick={() => handleEditPublication(pub)}>Modifier</button>\r\n                        <button onClick={() => handleDeletePublication(pub._id)}>Supprimer</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PublicationsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}