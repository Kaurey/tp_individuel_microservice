{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\coren\\\\Desktop\\\\tp_individuel_microservice\\\\frontend\\\\src\\\\pages\\\\PublicationsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchPublications, createPublication, deletePublication, updatePublication } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PublicationsPage() {\n  _s();\n  const [publications, setPublications] = useState([]);\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [editingId, setEditingId] = useState(null); // ID de la publication en cours de modification\n\n  useEffect(() => {\n    const loadPublications = async () => {\n      try {\n        const response = await fetchPublications();\n        // Trier les publications par date décroissante\n        const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n        setPublications(sortedPublications);\n      } catch (error) {\n        alert('Erreur lors du chargement des publications');\n      }\n    };\n    loadPublications();\n  }, []);\n  const handleAddPublication = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('Vous devez être connecté pour ajouter une publication.');\n      return;\n    }\n    try {\n      const newPublication = {\n        title,\n        content\n      };\n      await createPublication(newPublication, token);\n      alert('Publication ajoutée avec succès');\n      setTitle('');\n      setContent('');\n      const response = await fetchPublications();\n      // Trier les publications après ajout\n      const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n      setPublications(sortedPublications);\n    } catch (error) {\n      alert('Erreur lors de l\\'ajout de la publication');\n    }\n  };\n  const handleDeletePublication = async id => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('Vous devez être connecté pour supprimer une publication.');\n      return;\n    }\n    try {\n      await deletePublication(id, token);\n      alert('Publication supprimée avec succès');\n      const response = await fetchPublications();\n      // Trier les publications après suppression\n      const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n      setPublications(sortedPublications);\n    } catch (error) {\n      alert('Erreur lors de la suppression de la publication');\n    }\n  };\n  const handleEditPublication = pub => {\n    setEditingId(pub._id);\n    setTitle(pub.title);\n    setContent(pub.content);\n  };\n  const handleUpdatePublication = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (!token) {\n      alert('Vous devez être connecté pour modifier une publication.');\n      return;\n    }\n    try {\n      const updatedPublication = {\n        title,\n        content\n      };\n      await updatePublication(editingId, updatedPublication, token);\n      alert('Publication modifiée avec succès');\n      setEditingId(null);\n      setTitle('');\n      setContent('');\n      const response = await fetchPublications();\n      // Trier les publications après modification\n      const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n      setPublications(sortedPublications);\n    } catch (error) {\n      alert('Erreur lors de la modification de la publication');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Publications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editingId ? handleUpdatePublication : handleAddPublication,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Titre\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Contenu\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [editingId ? 'Modifier' : 'Ajouter', \" une publication\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: publications.map(pub => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: pub.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: pub.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditPublication(pub),\n          children: \"Modifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeletePublication(pub._id),\n          children: \"Supprimer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)]\n      }, pub._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(PublicationsPage, \"By/0MWRqcne75Tp0T1m2KHkFa1E=\");\n_c = PublicationsPage;\nexport default PublicationsPage;\nvar _c;\n$RefreshReg$(_c, \"PublicationsPage\");","map":{"version":3,"names":["React","useEffect","useState","fetchPublications","createPublication","deletePublication","updatePublication","jsxDEV","_jsxDEV","PublicationsPage","_s","publications","setPublications","title","setTitle","content","setContent","editingId","setEditingId","loadPublications","response","sortedPublications","data","sort","a","b","Date","createdAt","error","alert","handleAddPublication","e","preventDefault","token","localStorage","getItem","newPublication","handleDeletePublication","id","handleEditPublication","pub","_id","handleUpdatePublication","updatedPublication","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/coren/Desktop/tp_individuel_microservice/frontend/src/pages/PublicationsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchPublications, createPublication, deletePublication, updatePublication } from '../services/api';\r\n\r\nfunction PublicationsPage() {\r\n    const [publications, setPublications] = useState([]);\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [editingId, setEditingId] = useState(null); // ID de la publication en cours de modification\r\n\r\n    useEffect(() => {\r\n        const loadPublications = async () => {\r\n            try {\r\n                const response = await fetchPublications();\r\n                // Trier les publications par date décroissante\r\n                const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n                setPublications(sortedPublications);\r\n            } catch (error) {\r\n                alert('Erreur lors du chargement des publications');\r\n            }\r\n        };\r\n        loadPublications();\r\n    }, []);\r\n\r\n    const handleAddPublication = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            alert('Vous devez être connecté pour ajouter une publication.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const newPublication = { title, content };\r\n            await createPublication(newPublication, token);\r\n            alert('Publication ajoutée avec succès');\r\n            setTitle('');\r\n            setContent('');\r\n            const response = await fetchPublications();\r\n            // Trier les publications après ajout\r\n            const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n            setPublications(sortedPublications);\r\n        } catch (error) {\r\n            alert('Erreur lors de l\\'ajout de la publication');\r\n        }\r\n    };\r\n\r\n    const handleDeletePublication = async (id) => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            alert('Vous devez être connecté pour supprimer une publication.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await deletePublication(id, token);\r\n            alert('Publication supprimée avec succès');\r\n            const response = await fetchPublications();\r\n            // Trier les publications après suppression\r\n            const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n            setPublications(sortedPublications);\r\n        } catch (error) {\r\n            alert('Erreur lors de la suppression de la publication');\r\n        }\r\n    };\r\n\r\n    const handleEditPublication = (pub) => {\r\n        setEditingId(pub._id);\r\n        setTitle(pub.title);\r\n        setContent(pub.content);\r\n    };\r\n\r\n    const handleUpdatePublication = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            alert('Vous devez être connecté pour modifier une publication.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const updatedPublication = { title, content };\r\n            await updatePublication(editingId, updatedPublication, token);\r\n            alert('Publication modifiée avec succès');\r\n            setEditingId(null);\r\n            setTitle('');\r\n            setContent('');\r\n            const response = await fetchPublications();\r\n            // Trier les publications après modification\r\n            const sortedPublications = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n            setPublications(sortedPublications);\r\n        } catch (error) {\r\n            alert('Erreur lors de la modification de la publication');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Publications</h1>\r\n            <form onSubmit={editingId ? handleUpdatePublication : handleAddPublication}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Titre\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                <textarea\r\n                    placeholder=\"Contenu\"\r\n                    value={content}\r\n                    onChange={(e) => setContent(e.target.value)}\r\n                />\r\n                <button type=\"submit\">{editingId ? 'Modifier' : 'Ajouter'} une publication</button>\r\n            </form>\r\n            <ul>\r\n                {publications.map((pub) => (\r\n                    <li key={pub._id}>\r\n                        <h2>{pub.title}</h2>\r\n                        <p>{pub.content}</p>\r\n                        <button onClick={() => handleEditPublication(pub)}>Modifier</button>\r\n                        <button onClick={() => handleDeletePublication(pub._id)}>Supprimer</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PublicationsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}